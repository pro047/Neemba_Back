name: neemba

networks:
  appnet:
    driver: bridge

volumes:
  neemba_data:
  nats-data:
  node_modules:

services:
  node:
    build:
      context: ./services/node
      dockerfile: Dockerfile
    container_name: node
    env_file:
      - .env.dev
    working_dir: /app/services/node
    ports:
      - "3000:3000"
    volumes:
      - ./services/node:/app/services/node
      - /var/lib/neemba/secrets:/var/lib/neemba/secrets:ro
      - /app/services/node/node_modules
    depends_on:
      - python
    networks:
      - appnet
    restart: unless-stopped

  python:
    build: ./services/python
    container_name: python
    volumes:
      - ./services/python:/app/services/python
    env_file:
      - .env.dev
    ports:
      - "8000:8000"
    networks:
      - appnet
    restart: unless-stopped

  nginx:
    build: ./infra/nginx
    container_name: nginx
    depends_on:
      - node
      - python
    ports:
      # - "80:80"
      # - "443:443"
      - "8080:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/nginx/empty:/etc/nginx/conf.d:ro
    networks:
      - appnet
    restart: unless-stopped

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    container_name: nginx-exporter
    command:
      - "-nginx.scrape-uri=http://nginx:80/nginx_status"
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - appnet

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - appnet
    depends_on:
      - node
      - python
      - nginx-exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - .env.dev
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3001:3000"
    networks:
      - appnet
    restart: unless-stopped
    depends_on:
      - prometheus

  nats:
    image: nats:2.10.17-alpine
    command:
      - "-c"
      - "/etc/nats/nats.conf"
    ports:
      - "4222:4222"
      - "8222:8222" # 모니터링
    volumes:
      - nats-data:/data
      - ./infra/nats/nats.conf:/etc/nats/nats.conf:ro
    networks:
      - appnet
    restart: unless-stopped

  nats-box:
    image: synadia/nats-box:latest
    env_file:
      - .env.dev
    depends_on:
      - nats
    environment:
      - NATS_URL=${NATS_URL}
    stdin_open: true
    tty: true
    networks:
      - appnet
