name: neemba
networks:
  appnet:
    driver: bridge

volumes:
  nats-data:

services:
  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/letsencrypt:/etc/letsencrypt
      - ./infra/nginx/html:/var/www/html
    restart: unless-stopped
    networks:
      - appnet

  rtmp:
    image: alfg/nginx-rtmp
    container_name: rtmp
    ports:
      - "1935:1935"
    volumes:
      - ./infra/rtmp/nginx.conf:/etc/nginx/nginx.conf.template:ro
    entrypoint: >
      sh -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf &&
            nginx -g 'daemon off;'"
    networks:
      - appnet
    restart: unless-stopped

  reloader:
    image: alpine:3.20
    container_name: nginx-reloader
    command: >
      sh -c "apk add --no-cache curl docker-cli netcat-openbsd &&
            while true; do
              nc -l -p 8888 -e sh -c 'docker kill -s HUP nginx';
            done"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - appnet
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./infra/letsencrypt:/etc/letsencrypt
      - ./infra/nginx/html:/var/www/html
    entrypoint: >
      sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/html --quiet && nginx -s reload; sleep 12h & wait $${!}; done'
    networks:
      - appnet
    restart: unless-stopped

  node:
    build:
      context: ./services/node
      dockerfile: Dockerfile
    container_name: node
    env_file:
      - .env.prod
    expose:
      - "3000"
    networks:
      - appnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5

  python:
    build:
      context: ./services/python
      dockerfile: Dockerfile
      target: prod
    container_name: python
    env_file:
      - .env.prod
    expose:
      - "8000"
    networks:
      - appnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5

  nats:
    image: nats:2.10.17-alpine
    command: ["-c", "/etc/nats/nats.conf"]
    container_name: nats
    env_file:
      - .env.prod
    expose:
      - "4222"
      - "8222"
    volumes:
      - nats-data:/data
      - /srv/neemba/infra/nats/nats.conf:/etc/nats/nats.conf:ro
    networks:
      - appnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8222/varz"]
      interval: 10s
      timeout: 3s
      retries: 6
