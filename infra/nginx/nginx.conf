worker_processes auto;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            record off;
        }
    }
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream node   { server node:3000; }
    upstream python { server python:8000; }

    server {
        listen 80;
        server_name neemba.app www.neemba.app;

        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }

        location / {
            return 301 http://$host$request_uri;
        }
    }

    # server {
    #     listen 443 ssl;
    #     server_name neemba.app www.neemba.app;

    #     ssl_certificate /etc/letsencrypt/live/neemba.app/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/neemba.app/privkey.pem;
    #     location = /whoami {
    #         add_header X-Location "root" always;
    #         return 200 'hit /whoami (root)';
    #     }

    #     location /api/ {
    #         proxy_pass http://node;
    #         proxy_http_version 1.1;

    #         add_header X-Location "api" always;
    #         add_header X-Upstream-Addr $upstream_addr always;
    #         add_header X-Upstream-Status $upstream_status always;

    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #         proxy_connect_timeout 5s;
    #         proxy_send_timeout 60s;
    #         proxy_read_timeout 30s;
    #     }

    #     location /ws {
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection $connection_upgrade;

    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;

    #         proxy_pass http://python;
    #         proxy_read_timeout 3600s;
    #         proxy_send_timeout 60s;
    #         proxy_buffering off;
    #     }

    #     location /health {
    #         default_type text/plain;
    #         return 200 "ok\n";
    #     }

    #     location = /nginx_status {
    #         stub_status;
    #         allow 127.0.0.1;
    #         allow 172.16.0.0/12;
    #         deny all;
    #     }
    # }

    server {
        listen 8080;
        server_name _;

        location = /nginx_status {
            stub_status;
            allow all; # 데모 목적, 실제 운영에서는 ip 제한 필수
        }
    }
}